#!/bin/bash

# Script to receive an MEI file from a POST request and store
# for (temporary) web access, the link returned in response.
#
# Also creates a logfile entry for each file stored.
#
# Todo:
#
# 1. This has only been tested on Ubuntu and there are hardcoded 
# PATH strings
#
# 2. The .mei files are never removed, this is left to something else
#
# 3. The logfile isn't checked for length.
#
# David De Roure 12 December 2017.

# For ubuntu on demeter
OUTDIR=/home/dder/www/NumbersIntoNotes/mei
URLBASE="http://numbersintonotes.net/mei"
PYTHON=/usr/bin/python2.7
IDS=ids.txt

# For MacOS on Dave's laptop
#OUTDIR=/Users/dave/Sites/midi
#URLBASE="http://localhost/~dave/midi"
#PYTHON=/Library/Frameworks/Python.framework/Versions/2.7/bin/python2.7
TMP=/tmp/nin$$
DATE=`/bin/date`

cd /tmp # work somewhere other than the live Web space

cat >> $OUTDIR/log.txt <<EOF
[$DATE]
Referer: $HTTP_REFERER
User Agent: $HTTP_USER_AGENT
IP Address: $REMOTE_ADDR
EOF

# Respond to GET request - this is used by Javascript in the client to 
# test the availability of the CGI script

if [ "$REQUEST_METHOD" == "GET" ]; then
    echo  GET request received >> $OUTDIR/log.txt
    echo Content-Type: text/html
    echo
    cat <<- EOF
	<!DOCTYPE html>
	<html>
	<title>Numbers Into Notes MEI</title>
	<body>
	<p>User Agent: $HTTP_USER_AGENT</p>
	<p>IP Address: $REMOTE_ADDR</p>
	</body>
	</html>
	EOF
    exit
fi

if [ "$REQUEST_METHOD" != "POST" ]; then
    echo  Only GET and POST methods supported >> $OUTDIR/log.txt
    echo 'Status: 405 Method Not Allowed'
    echo
    exit
fi

$PYTHON -c "import cgi, cgitb; form = cgi.FieldStorage(); print form.getvalue('meitext')" > $TMP

# validate input

grep "<<title type=\"subordinate\">" $TMP >> $OUTDIR/log.txt

UUID=`sed -n 's/.*<title type=.subordinate.>\([0-9a-f-]*\).*$/\1/p' $TMP`

if [ -z ${UUID} ] ; then
    echo  Cannot find ID >> $OUTDIR/log.txt
    rm -f $TMP
    echo 'Status: 400 Bad Request'
    echo
    exit
fi

# cp $TMP $OUTDIR/${UUID}.mei

sed -e '/^<!--/,$d' $TMP > $OUTDIR/${UUID}.mei
sed -n -e 's/^!//p' $TMP > $OUTDIR/${UUID}.rdf

echo $UUID >> $OUTDIR/$IDS

rm -f $TMP

if [ ! -s $OUTDIR/${UUID}.mei ] ; then
    echo  Creation of $OUTDIR/${UUID}.mei failed >> $OUTDIR/log.txt
    echo 'Status: 400 Bad Request'
    echo
    exit
fi

echo Created $OUTDIR/${UUID}.mei >> $OUTDIR/log.txt

# to return link

cat << EOF
Content-Type: text/html
Access-Control-Allow-Origin: *

<!DOCTYPE html>
<html>
<head>
<title>Numbers Into Notes - Link to MEI File</title>
</head>
<body>
<h1>Link to MEI File</h1>
<p><a href="$URLBASE/${UUID}.mei" download>${UUID}</A> generated on $DATE</p>
</body>
</html>
EOF

echo Generated $URLBASE/${UUID}.mei >> $OUTDIR/log.txt

exit 0

# return MEI attachment for download

echo "Content-type: application/octet-stream"
echo "Content-disposition: attachment; filename=$UUID.mei"
echo "Access-Control-Allow-Origin: *"
echo ""
cat $OUTDIR/${UUID}.mei

exit 0

# return audio/midi to be handled by browser

echo "Content-type: image/audio/midi"
echo ""
cat $OUTDIR/${UUID}.mei

exit 0

# End of mei
